<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 当实体类属性名与表字段不一致时，可以使用resultMap元素映射其对应关系 -->
<!-- <resultMap type="com.mybatis.entity.User" id="userMap"> 
  <id property="id" column="id"/> 
  <result property="userName" column="user_name"/> 
  <result property="password" column="password"/> 
     </resultMap> 
<select id="selectById" resultMap="userMap"> 
	select * from USER where id = #{id} 
</select> 
	-->

<mapper namespace="com.mybatis.mapper.StudentMapper">
	<!-- 相当于JDBC中的预编译 -->
	<select id="selectAllStudents" resultType="com.mybatis.entity.Student">
		select * from student
	</select>
	<!-- 查询id的学生信息 -->
	<select id="selectStudent" resultType="student">
		select * from student where id=#{id}
	</select>
	<!-- 查询id大于1的学生 -->
	<select id="selectStudents" resultType="student">
		select * from student where id> #{id}
	</select>
	<!-- 根据name模糊查询学生信息 -->
	<select id="selectStudentss" resultType="student">
		select * from student where name like concat('%',#{name},'%')
	</select>
	<!-- 添加学生,当使用session.getMapper()方法 parameterType -->
	<insert id="addStudent" parameterType="com.mybatis.entity.Student" useGeneratedKeys="true" keyProperty="id">
		insert into student (stuNum,name) values (#{stuNum},#{name})
	</insert>
	<!-- 删除学生 -->
	<delete id="deleteStudent" parameterType="java.lang.Integer">
		delete from student where id=#{id}
	</delete>
	<!-- 修改学生 -->
	<update id="updateStudent" parameterType="student">
		update student set stuNum=#{stuNum},name=#{name} where id=#{id}
	</update>
	<!-- 传参类型：数组、List、Map -->
	<select id="selectStudentsArray" resultType="student">
		select * from student where ${array[1]}=#{array[0]}
	</select>
	<select id="selectStudentsList" resultType="student">
		<!-- select * from student where id=#{list[0]} -->
		select * from student where ${list[1]}=#{list[0]}
	</select>
	<select id="selectStudentsMap" resultType="student">
		<!-- select * from student where id=#{key} -->
		select * from student where ${value}=#{keys}
	</select>
	<!-- 根据QueryVo中的id集合实现查询用户列表 -->
	<select id="findStudentInIds" resultType="student" parameterType="queryvo">
	select * from student 
	<where>
	<if test="ids !=null and ids.size()>0">
	<foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
	#{id}
	</foreach>
	</if>
	</where>
	</select>
</mapper>